/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_MSG_GXOVNT_CONTAINER_PB_H_INCLUDED
#define PB_MSG_GXOVNT_CONTAINER_PB_H_INCLUDED
#include "pb.h"
#include "msg_gxovnt_command.pb.h"
#include "msg_gxovnt_config.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE {
    MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MSG_GXOVnT_MESSAGE_TYPE_COMMAND = 0,
    MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MSG_GXOVnT_MESSAGE_TYPE_CONFIG = 1,
    MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MSG_GXOVnT_MESSAGE_TYPE_NOT_SET = 99
} MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE;

/* Struct definitions */
typedef struct _MSG_GXOVnT_Container {
    MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE MessageType;
    pb_size_t which_msg;
    union {
        MSG_GXOVnT_Command Command;
        MSG_GXOVnT_Config Config;
    } msg;
} MSG_GXOVnT_Container;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MIN MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MSG_GXOVnT_MESSAGE_TYPE_COMMAND
#define _MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MAX MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MSG_GXOVnT_MESSAGE_TYPE_NOT_SET
#define _MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_ARRAYSIZE ((MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE)(MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MSG_GXOVnT_MESSAGE_TYPE_NOT_SET+1))

#define MSG_GXOVnT_Container_MessageType_ENUMTYPE MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE


/* Initializer values for message structs */
#define MSG_GXOVnT_Container_init_default        {_MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MIN, 0, {MSG_GXOVnT_Command_init_default}}
#define MSG_GXOVnT_Container_init_zero           {_MSG_GXOVnT_Container_MSG_GXOVnT_MESSAGE_TYPE_MIN, 0, {MSG_GXOVnT_Command_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MSG_GXOVnT_Container_MessageType_tag     1
#define MSG_GXOVnT_Container_Command_tag         2
#define MSG_GXOVnT_Container_Config_tag          3

/* Struct field encoding specification for nanopb */
#define MSG_GXOVnT_Container_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    MessageType,       1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,Command,msg.Command),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,Config,msg.Config),   3)
#define MSG_GXOVnT_Container_CALLBACK NULL
#define MSG_GXOVnT_Container_DEFAULT NULL
#define MSG_GXOVnT_Container_msg_Command_MSGTYPE MSG_GXOVnT_Command
#define MSG_GXOVnT_Container_msg_Config_MSGTYPE MSG_GXOVnT_Config

extern const pb_msgdesc_t MSG_GXOVnT_Container_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MSG_GXOVnT_Container_fields &MSG_GXOVnT_Container_msg

/* Maximum encoded size of messages (where known) */
#if defined(MSG_GXOVnT_Config_size)
union MSG_GXOVnT_Container_msg_size_union {char f3[(6 + MSG_GXOVnT_Config_size)]; char f0[5];};
#endif
#if defined(MSG_GXOVnT_Config_size)
#define MSG_GXOVNT_CONTAINER_PB_H_MAX_SIZE       MSG_GXOVnT_Container_size
#define MSG_GXOVnT_Container_size                (2 + sizeof(union MSG_GXOVnT_Container_msg_size_union))
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
