/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_MSG_GXOVNT_COMMAND_PB_H_INCLUDED
#define PB_MSG_GXOVNT_COMMAND_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id {
    MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_GET_CONFIG = 0,
    MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_UPDATE_FIRMWARE = 1,
    MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_NOT_SET = 99
} MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id;

/* Struct definitions */
typedef struct _MSG_GXOVnT_Command {
    MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id commandId;
} MSG_GXOVnT_Command;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_MIN MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_GET_CONFIG
#define _MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_MAX MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_NOT_SET
#define _MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_ARRAYSIZE ((MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id)(MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_NOT_SET+1))

#define MSG_GXOVnT_Command_commandId_ENUMTYPE MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id


/* Initializer values for message structs */
#define MSG_GXOVnT_Command_init_default          {_MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_MIN}
#define MSG_GXOVnT_Command_init_zero             {_MSG_GXOVnT_Command_MSG_GXOVnT_Command_Id_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define MSG_GXOVnT_Command_commandId_tag         99

/* Struct field encoding specification for nanopb */
#define MSG_GXOVnT_Command_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    commandId,        99)
#define MSG_GXOVnT_Command_CALLBACK NULL
#define MSG_GXOVnT_Command_DEFAULT NULL

extern const pb_msgdesc_t MSG_GXOVnT_Command_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MSG_GXOVnT_Command_fields &MSG_GXOVnT_Command_msg

/* Maximum encoded size of messages (where known) */
#define MSG_GXOVNT_COMMAND_PB_H_MAX_SIZE         MSG_GXOVnT_Command_size
#define MSG_GXOVnT_Command_size                  3

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
